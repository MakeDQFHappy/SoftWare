<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.tongji.study.mapper.AnswersMapper">
  <resultMap id="BaseResultMap" type="cn.tongji.study.model.Answers">
    <id column="answer_id" jdbcType="BIGINT" property="answerId" />
    <result column="answerer_id" jdbcType="BIGINT" property="answererId" />
    <result column="question_id" jdbcType="BIGINT" property="questionId" />
    <result column="adopted" jdbcType="BIT" property="adopted" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="cn.tongji.study.model.Answers">
    <result column="answer_content" jdbcType="LONGVARCHAR" property="answerContent" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    answer_id, answerer_id, question_id, adopted, create_time
  </sql>
  <sql id="Blob_Column_List">
    answer_content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="cn.tongji.study.model.AnswersExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from answers
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="cn.tongji.study.model.AnswersExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from answers
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from answers
    where answer_id = #{answerId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from answers
    where answer_id = #{answerId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.tongji.study.model.AnswersExample">
    delete from answers
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.tongji.study.model.Answers">
    insert into answers (answer_id, answerer_id, question_id, 
      adopted, create_time, answer_content
      )
    values (#{answerId,jdbcType=BIGINT}, #{answererId,jdbcType=BIGINT}, #{questionId,jdbcType=BIGINT}, 
      #{adopted,jdbcType=BIT}, #{createTime,jdbcType=TIMESTAMP}, #{answerContent,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.tongji.study.model.Answers">
    insert into answers
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="answerId != null">
        answer_id,
      </if>
      <if test="answererId != null">
        answerer_id,
      </if>
      <if test="questionId != null">
        question_id,
      </if>
      <if test="adopted != null">
        adopted,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="answerContent != null">
        answer_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="answerId != null">
        #{answerId,jdbcType=BIGINT},
      </if>
      <if test="answererId != null">
        #{answererId,jdbcType=BIGINT},
      </if>
      <if test="questionId != null">
        #{questionId,jdbcType=BIGINT},
      </if>
      <if test="adopted != null">
        #{adopted,jdbcType=BIT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="answerContent != null">
        #{answerContent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.tongji.study.model.AnswersExample" resultType="java.lang.Long">
    select count(*) from answers
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update answers
    <set>
      <if test="record.answerId != null">
        answer_id = #{record.answerId,jdbcType=BIGINT},
      </if>
      <if test="record.answererId != null">
        answerer_id = #{record.answererId,jdbcType=BIGINT},
      </if>
      <if test="record.questionId != null">
        question_id = #{record.questionId,jdbcType=BIGINT},
      </if>
      <if test="record.adopted != null">
        adopted = #{record.adopted,jdbcType=BIT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.answerContent != null">
        answer_content = #{record.answerContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update answers
    set answer_id = #{record.answerId,jdbcType=BIGINT},
      answerer_id = #{record.answererId,jdbcType=BIGINT},
      question_id = #{record.questionId,jdbcType=BIGINT},
      adopted = #{record.adopted,jdbcType=BIT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      answer_content = #{record.answerContent,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update answers
    set answer_id = #{record.answerId,jdbcType=BIGINT},
      answerer_id = #{record.answererId,jdbcType=BIGINT},
      question_id = #{record.questionId,jdbcType=BIGINT},
      adopted = #{record.adopted,jdbcType=BIT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.tongji.study.model.Answers">
    update answers
    <set>
      <if test="answererId != null">
        answerer_id = #{answererId,jdbcType=BIGINT},
      </if>
      <if test="questionId != null">
        question_id = #{questionId,jdbcType=BIGINT},
      </if>
      <if test="adopted != null">
        adopted = #{adopted,jdbcType=BIT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="answerContent != null">
        answer_content = #{answerContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where answer_id = #{answerId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.tongji.study.model.Answers">
    update answers
    set answerer_id = #{answererId,jdbcType=BIGINT},
      question_id = #{questionId,jdbcType=BIGINT},
      adopted = #{adopted,jdbcType=BIT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      answer_content = #{answerContent,jdbcType=LONGVARCHAR}
    where answer_id = #{answerId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.tongji.study.model.Answers">
    update answers
    set answerer_id = #{answererId,jdbcType=BIGINT},
      question_id = #{questionId,jdbcType=BIGINT},
      adopted = #{adopted,jdbcType=BIT},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where answer_id = #{answerId,jdbcType=BIGINT}
  </update>
</mapper>