<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.tongji.study.mapper.UsersMapper">
  <resultMap id="BaseResultMap" type="cn.tongji.study.model.Users">
    <id column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="created_time" jdbcType="TIMESTAMP" property="createdTime" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="bonus_points" jdbcType="INTEGER" property="bonusPoints" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="academic_number" jdbcType="VARCHAR" property="academicNumber" />
    <result column="user_type" jdbcType="SMALLINT" property="userType" />
    <result column="last_login_time" jdbcType="TIMESTAMP" property="lastLoginTime" />
    <result column="birth_year" jdbcType="INTEGER" property="birthYear" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="real_name" jdbcType="VARCHAR" property="realName" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="cn.tongji.study.model.Users">
    <result column="user_avatar" jdbcType="LONGVARCHAR" property="userAvatar" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    user_id, created_time, user_name, bonus_points, email, sex, academic_number, user_type, 
    last_login_time, birth_year, password, real_name
  </sql>
  <sql id="Blob_Column_List">
    user_avatar
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="cn.tongji.study.model.UsersExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="cn.tongji.study.model.UsersExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from users
    where user_id = #{userId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from users
    where user_id = #{userId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.tongji.study.model.UsersExample">
    delete from users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.tongji.study.model.Users">
    insert into users (user_id, created_time, user_name, 
      bonus_points, email, sex, 
      academic_number, user_type, last_login_time, 
      birth_year, password, real_name, 
      user_avatar)
    values (#{userId,jdbcType=BIGINT}, #{createdTime,jdbcType=TIMESTAMP}, #{userName,jdbcType=VARCHAR}, 
      #{bonusPoints,jdbcType=INTEGER}, #{email,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, 
      #{academicNumber,jdbcType=VARCHAR}, #{userType,jdbcType=SMALLINT}, #{lastLoginTime,jdbcType=TIMESTAMP}, 
      #{birthYear,jdbcType=INTEGER}, #{password,jdbcType=VARCHAR}, #{realName,jdbcType=VARCHAR}, 
      #{userAvatar,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.tongji.study.model.Users">
    insert into users
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="createdTime != null">
        created_time,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="bonusPoints != null">
        bonus_points,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="academicNumber != null">
        academic_number,
      </if>
      <if test="userType != null">
        user_type,
      </if>
      <if test="lastLoginTime != null">
        last_login_time,
      </if>
      <if test="birthYear != null">
        birth_year,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="realName != null">
        real_name,
      </if>
      <if test="userAvatar != null">
        user_avatar,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="bonusPoints != null">
        #{bonusPoints,jdbcType=INTEGER},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="academicNumber != null">
        #{academicNumber,jdbcType=VARCHAR},
      </if>
      <if test="userType != null">
        #{userType,jdbcType=SMALLINT},
      </if>
      <if test="lastLoginTime != null">
        #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="birthYear != null">
        #{birthYear,jdbcType=INTEGER},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="realName != null">
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="userAvatar != null">
        #{userAvatar,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.tongji.study.model.UsersExample" resultType="java.lang.Long">
    select count(*) from users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update users
    <set>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.createdTime != null">
        created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.userName != null">
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.bonusPoints != null">
        bonus_points = #{record.bonusPoints,jdbcType=INTEGER},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=VARCHAR},
      </if>
      <if test="record.academicNumber != null">
        academic_number = #{record.academicNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.userType != null">
        user_type = #{record.userType,jdbcType=SMALLINT},
      </if>
      <if test="record.lastLoginTime != null">
        last_login_time = #{record.lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.birthYear != null">
        birth_year = #{record.birthYear,jdbcType=INTEGER},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.realName != null">
        real_name = #{record.realName,jdbcType=VARCHAR},
      </if>
      <if test="record.userAvatar != null">
        user_avatar = #{record.userAvatar,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update users
    set user_id = #{record.userId,jdbcType=BIGINT},
      created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      user_name = #{record.userName,jdbcType=VARCHAR},
      bonus_points = #{record.bonusPoints,jdbcType=INTEGER},
      email = #{record.email,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=VARCHAR},
      academic_number = #{record.academicNumber,jdbcType=VARCHAR},
      user_type = #{record.userType,jdbcType=SMALLINT},
      last_login_time = #{record.lastLoginTime,jdbcType=TIMESTAMP},
      birth_year = #{record.birthYear,jdbcType=INTEGER},
      password = #{record.password,jdbcType=VARCHAR},
      real_name = #{record.realName,jdbcType=VARCHAR},
      user_avatar = #{record.userAvatar,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update users
    set user_id = #{record.userId,jdbcType=BIGINT},
      created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      user_name = #{record.userName,jdbcType=VARCHAR},
      bonus_points = #{record.bonusPoints,jdbcType=INTEGER},
      email = #{record.email,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=VARCHAR},
      academic_number = #{record.academicNumber,jdbcType=VARCHAR},
      user_type = #{record.userType,jdbcType=SMALLINT},
      last_login_time = #{record.lastLoginTime,jdbcType=TIMESTAMP},
      birth_year = #{record.birthYear,jdbcType=INTEGER},
      password = #{record.password,jdbcType=VARCHAR},
      real_name = #{record.realName,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.tongji.study.model.Users">
    update users
    <set>
      <if test="createdTime != null">
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="bonusPoints != null">
        bonus_points = #{bonusPoints,jdbcType=INTEGER},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="academicNumber != null">
        academic_number = #{academicNumber,jdbcType=VARCHAR},
      </if>
      <if test="userType != null">
        user_type = #{userType,jdbcType=SMALLINT},
      </if>
      <if test="lastLoginTime != null">
        last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="birthYear != null">
        birth_year = #{birthYear,jdbcType=INTEGER},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="realName != null">
        real_name = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="userAvatar != null">
        user_avatar = #{userAvatar,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where user_id = #{userId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.tongji.study.model.Users">
    update users
    set created_time = #{createdTime,jdbcType=TIMESTAMP},
      user_name = #{userName,jdbcType=VARCHAR},
      bonus_points = #{bonusPoints,jdbcType=INTEGER},
      email = #{email,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      academic_number = #{academicNumber,jdbcType=VARCHAR},
      user_type = #{userType,jdbcType=SMALLINT},
      last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      birth_year = #{birthYear,jdbcType=INTEGER},
      password = #{password,jdbcType=VARCHAR},
      real_name = #{realName,jdbcType=VARCHAR},
      user_avatar = #{userAvatar,jdbcType=LONGVARCHAR}
    where user_id = #{userId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.tongji.study.model.Users">
    update users
    set created_time = #{createdTime,jdbcType=TIMESTAMP},
      user_name = #{userName,jdbcType=VARCHAR},
      bonus_points = #{bonusPoints,jdbcType=INTEGER},
      email = #{email,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      academic_number = #{academicNumber,jdbcType=VARCHAR},
      user_type = #{userType,jdbcType=SMALLINT},
      last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      birth_year = #{birthYear,jdbcType=INTEGER},
      password = #{password,jdbcType=VARCHAR},
      real_name = #{realName,jdbcType=VARCHAR}
    where user_id = #{userId,jdbcType=BIGINT}
  </update>
</mapper>